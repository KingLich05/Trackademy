using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Trackademy.Application.Dashboard;
using Trackademy.Application.Dashboard.Models;

namespace Trackademy.Api.Controllers;

[Route("api/[controller]")]
[ApiController]
[Authorize]
public class DashboardController : ControllerBase
{
    private readonly IDashboardService _dashboardService;

    public DashboardController(IDashboardService dashboardService)
    {
        _dashboardService = dashboardService;
    }

    /// <summary>
    /// üìä –ü–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –¥–∞—à–±–æ—Ä–¥–∞ - –æ—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    /// </summary>
    [HttpGet("summary")]
    public async Task<ActionResult<DashboardSummaryDto>> GetDashboardSummary([FromQuery] DashboardFilterDto? filter = null)
    {
        try
        {
            var summary = await _dashboardService.GetDashboardSummaryAsync(filter);
            return Ok(summary);
        }
        catch (Exception ex)
        {
            return BadRequest($"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–π —Å–≤–æ–¥–∫–∏: {ex.Message}");
        }
    }

    /// <summary>
    /// üìà –ü–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –¥–∞—à–±–æ—Ä–¥–∞ - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    /// </summary>
    [HttpGet("detailed")]
    public async Task<ActionResult<DashboardDetailedDto>> GetDashboardDetailed([FromQuery] DashboardFilterDto? filter = null)
    {
        try
        {
            var detailed = await _dashboardService.GetDashboardDetailedAsync(filter);
            return Ok(detailed);
        }
        catch (Exception ex)
        {
            return BadRequest($"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {ex.Message}");
        }
    }
}